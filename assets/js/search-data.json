{
  
    
        "post0": {
            "title": "Garbage in Garbage Out",
            "content": "I have been listening to podcasts for a few years now. . Garbage in garbage out . This I read this phrase from Steal Like an Artist (affiliated) which is the first English book I read, it stuck in my head till this day. . Huberman Podcast . This is probably the best podcast on health and wellness. Professor Andrew Huberman covers a lot of relevant and useful topics. Our body is the only machine that does not come with a user manual. The content Hubermanlab provides can be used as that missing manual. . The Joe Rogan Experience . He had some controversial stuff in the past as like the most public figures, so take everything he says with a grain of salt. After hearing lots of MMA and fighting related content, I decided to try out Muay Thai, and it has been the best thing I tried for a long long while. I think Muay Thai had tremendous affect on my physical and mental health. . Combat sports not only can straighten your belly but also your ego and confidence. . Another great thing about his podcast is that he introduces a lot of people from different backgrounds, I got to know David Goggins, Wim Hof, Graham Hancock, Guy Ritchie and many more. . It has been more than two years since I started taking cold showers. It kinda gives me the shock and energy to go on when I am low. . David Goggins has a great book. Can’t Hurt Me: Master Your Mind and Defy the Odds (affiliated) . The book is about a lazy ass man’s redemption through physical training. It is also a journey of learning how to control your mind. It is really fascinating. . Lex Fridman Podcast . He has really awesome guests. Most of his content is intellectually heavy. . The Daily Stoic . I really like the concept of Stoic. Ryan Holiday delivers the message quite well. .",
            "url": "https://lsgrep.github.io/podcasts/books/2022/07/22/Garbage-In-Garbage-Out.html",
            "relUrl": "/podcasts/books/2022/07/22/Garbage-In-Garbage-Out.html",
            "date": " • Jul 22, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "On Taking Notes",
            "content": "“Making a full sentence is pretty difficult for the brain.” - Something I learned from one of the great Andrew Huberman podcasts. . I am no trained psychiatrist, but I have an intuition that writing probably makes thinking process easier by taking certain amount of load off from the prefrontal cortex. . Writing &amp; Being Perfect . I was never good at writing or taking notes. It always took me an awful lot of time get started with any form of writing. Probably I was or still am a perfectionist, and I always wanted to get things right the first time. . Perfectionism stems from the fear of our mortality. - Susan Cain, Lex Fridman Podcast . Our brain works by punishing the loss and rewarding the gains. Making mistakes could be detrimental to our survival in the early stages of human existence, and we always receive negative feedbacks from supervisors or peers for our mistakes. Thus we avoid errors, mistakes, or failures at any cost. . Fear of failure could be the major hindrance to our productivity, but in reality failure, or errors are the norm. Getting things right is just rare. If I learned anything in my life, it would be thinking in terms of errors. Our brain hardly predicts anything correctly, nor our actions match the expectations. So let’s modify the optimization target. “We are bound to miss, but we can try to minimize the negative margins.(or increase the positive margins)” . How to Take Smart Notes . I think learned a few things after reading the book. How to Take Smart Notes (affiliated). . It officially introduced me to the concept of Zettlekasten (slipbox, backlinks). . Main philosophy: . Rather taking a top to down approach to writing (think everything through at the start), start from taking random notes, then when think you are ready you can connect the dots and complete the writing (bottom to top). | . Actionable Steps: . do your research | take notes into slipbox whenever you find something interesting | reorganize your notes from slipbox with backlinks into different category or subtopics | construct the drafts from previously organized notes | Here is how I interlink different notes in Obsidian. . Zettelkasten Apps . There are a lot of tools that can implement Zettelkasten notes. I personally use Obsidian for note taking, cause I prefer saving notes locally. . Archive | Roam Research | Obsidian | . Obsidian also offers a lot of other features like: . VIM mode support | Daily Journal | Templates | Customizable Shortcuts | Customizable UI, | …. | . I want to write book. I already started taking notes with Zettelkasten method. I will write a post every day. .",
            "url": "https://lsgrep.github.io/notes/writing/2022/07/20/On-Taking-Notes.html",
            "relUrl": "/notes/writing/2022/07/20/On-Taking-Notes.html",
            "date": " • Jul 20, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Disable Ubuntu Systemd Resolved",
            "content": "In Ubuntu, if you want to use custom DNS services which most likely run on port 53 you have to disable systemd-resolved first to vacate the port. . edit /etc/systemd/resolved.conf Add two lines: | . DNS=8.8.8.8 . DNSStubListener=no . # This file is part of systemd. # # systemd is free software; you can redistribute it and/or modify it # under the terms of the GNU Lesser General Public License as published by # the Free Software Foundation; either version 2.1 of the License, or # (at your option) any later version. # # Entries in this file show the compile time defaults. # You can change settings by editing this file. # Defaults can be restored by simply deleting this file. # # See resolved.conf(5) for details [Resolve] DNS=8.8.8.8 #FallbackDNS= #Domains= #DNSSEC=no #DNSOverTLS=no #MulticastDNS=no #LLMNR=no #Cache=no-negative DNSStubListener=no #ReadEtcHosts=yes #ResolveUnicastSingleLabel=no . sudo systemctl restart systemd-resolved | . All set. .",
            "url": "https://lsgrep.github.io/ubuntu/systemd/2020/01/27/Disabling-Systemd-Resolved.html",
            "relUrl": "/ubuntu/systemd/2020/01/27/Disabling-Systemd-Resolved.html",
            "date": " • Jan 27, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Setting up a media server with Jellyfin",
            "content": "I have an Ubuntu desktop machine with an old Nvidia card. It has OKish specs, but it is a bit noisy for my liking. In short, I’ve made it into a publicly accessible Jellyfin media server with Traefik+Wireguard and moved it to the corner of my place with USB WiFi stick plugged in. . WiFi . You have install kernel drivers for the WiFi stick first, and the drivers are vendor specific. . | check available devices . | . iwconfig . wlp4s0 is the device name for my USB WiFi stick. . bring the device up | . sudo ifconfig wlp4s0 up . check available wireless networks | . sudo iwlist wlp4s0 scan | grep ESSID . connect to the network | . # generate &amp; save password wpa_passphrase your-ESSID your-wifi-passphrase | sudo tee /etc/wpa_supplicant.conf # -B is for running things in background sudo wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlp4s0 # get an IP address sudo dhclient wlp4s0 . Autoconnect to WiFi after reboot | . # crontab for the root sudo crontabe -u root -e # content of crontab # @reboot sleep 5 &amp;&amp; /usr/local/bin/wifi.sh 2&gt;&amp;1 &gt;&gt; /var/log/reboot.log . #!/bin/bash # wifi.sh /usr/sbin/rfkill unblock wifi || true /sbin/ifconfig wlp4s0 up || true /sbin/wpa_supplicant -B -c /etc/wpa_supplicant.conf -i wlp4s0 || true /sbin/dhclient wlp4s0 || true . Disable WiFi power saving . Disable wifi power management directly by editing /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf and changed the value from 3 to 2, saved changes and reboot. | . | Performance Tweaks . | . # To ameliorate the connection through the intel wifi card you can: # Disable 802.11n # Enable software encryption # Enable the transmission antenna aggregation # Disable bluetooth coexistence # Create a /etc/modprobe.d/iwlwifi.conf with the following content : options iwlwifi 11n_disable=1 options iwlwifi swcrypto=1 options iwlwifi 11n_disable=8 options iwlwifi bt_coex_active=0 . Remote Desktop . I’ve tried lots of things for remote desktop, then settled for Chrome Remote Desktop. Official docs are not so reliable, and this gist did the trick. . Honestly I don’t use this at all, but I think it is nice to have. . 400: Invalid request . https://gist.github.com/organizm/ae09f72bd5badc64d4727a0d38fc590b . Media Server . Jellyfin is free &amp; open source, and it is not bloated with ads. Start Jellyfin with Nvidia hardware acceleration enabled(You can check out docs for more). Docker-compose is buggy with GPUs, so I have to use command line for this. You have to install nvidia-docker2 before hand. | . docker run -d --name=jellyfin -e NVIDIA_DRIVER_CAPABILITIES=all -e NVIDIA_VISIBLE_DEVICES=all --gpus all --pid host --runtime=nvidia -p 8096:8096 -p 8920:8920 -v /data/jellyfin/config:/config -v /data/jellyfin/media:/media -v /data/jellyfin/cache:/cache --restart unless-stopped jellyfin/jellyfin:unstable . Since it is sharing(--pid host) PID namespace with host, you can run nvidia-smi on host machine directly to see if Jellyfin is using GPU when transcoding content. . . Register an OpenSubtitles.org account and install the plugin for the Jellyfin. You have to login with your account in the plugin settings page. With this you can add subtitles to your videos without too much effort. | . Syncing Remote Folders . rclone is kinda aggressive, so you have to use --max-delete 0 to keep your files intact in your destination. . rclone sync --max-delete 0 -v REMOTE_DRIVE:legal_movies movies --stats 10s . Internet Access . The desktop is connected to a VPS instance with WireGuard. WireGuard is pretty easy to setup. . Here is the Traefik configuration on the VPS instance. . A somewhat secure Traefik frontend with automated TLS certificates. . # docker-compose.yaml version: &#39;3.8&#39; services: traefik: image: traefik:v2.3 restart: always ports: - &quot;80:80&quot; - &quot;443:443&quot; volumes: - &quot;/var/log/traefik:/var/log/traefik&quot; # save certs so that you won&#39;t DDOS letencrypt servers after restart - &quot;$PWD/certs:/letsencrypt&quot; - &quot;/var/run/docker.sock:/var/run/docker.sock:ro&quot; - &quot;$PWD/services/traefik/:/etc/traefik/&quot; labels: - &quot;traefik.enable=true&quot; - &quot;traefik.http.routers.dashboard.rule=Host(`DOMAIN_FOR_DASHBOARD`)&quot; - &quot;traefik.http.routers.dashboard.entrypoints=websecure&quot; - &quot;traefik.http.routers.dashboard.tls.certresolver=letsencrypt&quot; - &quot;traefik.http.routers.dashboard.service=api@internal&quot; ### basic auth - &quot;traefik.http.routers.dashboard.middlewares=auth&quot; # admin admin; echo $(htpasswd -nb admin admin) | sed -e s/ $/ $ $/g - &quot;traefik.http.middlewares.auth.basicauth.users=admin:$$apr1$$k.B4XC1H$$s0IZDaqRa4BX0MwcMHXnD/&quot; ### compression - &quot;traefik.http.middlewares.test-compress.compress=true&quot; - &quot;traefik.http.middlewares.test-compress.compress.excludedcontenttypes=text/event-stream&quot; ### Security related - &quot;traefik.http.middlewares.test-security.headers.SSLRedirect=true&quot; #### Note that this uses SSLHost verbatim, so add the port to SSLHost if you are using an alternate port. - &quot;traefik.http.middlewares.test-security.headers.SSLForceHost=true&quot; #### The stsSeconds is the max-age of the Strict-Transport-Security header. If set to 0, would NOT include the header. - &quot;traefik.http.middlewares.test-security.headers.STSSeconds=315360000&quot; #### The stsIncludeSubdomains is set to true, the includeSubDomains directive will be #### appended to the Strict-Transport-Security header. - &quot;traefik.http.middlewares.test-security.headers.STSIncludeSubdomains=true&quot; #### Set stsPreload to true to have the preload flag appended to the Strict-Transport-Security header. - &quot;traefik.http.middlewares.test-security.headers.STSPreload=true&quot; #### Set forceSTSHeader to true, to add the STS header even when the connection is HTTP. - &quot;traefik.http.middlewares.test-security.headers.forceSTSHeader=true&quot; #### Set frameDeny to true to add the X-Frame-Options header with the value of DENY. - &quot;traefik.http.middlewares.test-security.headers.frameDeny=true&quot; #### Set contentTypeNosniff to true to add the X-Content-Type-Options header with the value nosniff. - &quot;traefik.http.middlewares.test-security.headers.contentTypeNosniff=true&quot; #### Set browserXssFilter to true to add the X-XSS-Protection header with the value 1; mode=block. - &quot;traefik.http.middlewares.test-security.headers.browserXSSFilter=true&quot; ### - &quot;traefik.http.middlewares.test-security.headers.contentSecurityPolicy=frame-ancestors &#39;self&#39;;&quot; - &quot;traefik.http.middlewares.test-security.headers.referrerPolicy=strict-origin&quot; - &quot;traefik.http.middlewares.test-security.headers.featurePolicy=microphone &#39;none&#39;; geolocation &#39;none&#39;&quot; . #services/traefik/traefik.toml [entryPoints] [entryPoints.web] address = &quot;:80&quot; [entryPoints.web.http] [entryPoints.web.http.redirections] [entryPoints.web.http.redirections.entryPoint] to = &quot;websecure&quot; scheme = &quot;https&quot; [entryPoints.websecure] address = &quot;:443&quot; [api] dashboard = true [accessLog] filePath = &quot;/var/log/traefik/access.log&quot; [log] filePath = &quot;/var/log/traefik/traefik.log&quot; format = &quot;json&quot; level = &quot;DEBUG&quot; [metrics] [metrics.prometheus] [providers] [providers.docker] exposedByDefault = false [providers.file] directory = &quot;/etc/traefik/dynamic/&quot; [certificatesResolvers.letsencrypt.acme] # your email address email = &quot;&quot; storage = &quot;/letsencrypt/acme.json&quot; [certificatesResolvers.letsencrypt.acme.httpChallenge] entryPoint = &quot;web&quot; . # services/traefik/dynamic/custom.yml http: middlewares: auth: basicAuth: users: # admin admin; htpasswd -nb admin admin - &quot;admin:$apr1$2p9L2YyO$6cnp6nqaF6Xgz9qdIGp/z1&quot; routers: jellyfin: middlewares: # extra basic auth if necessary - auth rule: Host(`YOUR_DOMAIN_NAME`) service: tv tls: certresolver: letsencrypt services: tv: loadBalancer: servers: # wireguard IP address of media server - url: http://WIREGUARD_IP_OF_MEDIA_SERVER:8096 . After setting this up, you can visit your Jellyfin from anywhere you like. .",
            "url": "https://lsgrep.github.io/jellyfin/gpu/ubuntu/wifi/2020/01/25/Setting-Up-a-Media-Server-with-Jellyfin.html",
            "relUrl": "/jellyfin/gpu/ubuntu/wifi/2020/01/25/Setting-Up-a-Media-Server-with-Jellyfin.html",
            "date": " • Jan 25, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "I do backend &amp; machine learning related projects. .",
          "url": "https://lsgrep.github.io/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://lsgrep.github.io/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}